# coding: utf-8

"""
    Residential Electrification Model API

    An API for REM, the Residential Electrification Model.

    The version of the OpenAPI document: 1.3.0
    Contact: datascience@rewiringamerica.org
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from rewiringamerica_rem.models.address_component_request import AddressComponentRequest

class TestAddressComponentRequest(unittest.TestCase):
    """AddressComponentRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AddressComponentRequest:
        """Test AddressComponentRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AddressComponentRequest`
        """
        model = AddressComponentRequest()
        if include_optional:
            return AddressComponentRequest(
                full_address = '1234 N Main St Naperville IL 60653',
                street_number = '1234',
                street_name = 'N MAIN ST',
                city = 'NAPERVILLE',
                state_abbr = 'IL',
                zip = '60563',
                latitude = 41.7904693,
                longitude = -88.1505546
            )
        else:
            return AddressComponentRequest(
                full_address = '1234 N Main St Naperville IL 60653',
                street_number = '1234',
                street_name = 'N MAIN ST',
                city = 'NAPERVILLE',
                state_abbr = 'IL',
                zip = '60563',
                latitude = 41.7904693,
                longitude = -88.1505546,
        )
        """

    def testAddressComponentRequest(self):
        """Test AddressComponentRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
